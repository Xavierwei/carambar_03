/***
Chessboard
创建人：ZЁЯ¤　身高：168cm+；体重：57kg+；未婚（已有女友）；最爱的运动：睡觉；格言：路见不平，拔腿就跑。QQ：358315553。
创建时间：2012年12月05日 00:36:16
简要说明：这家伙很懒什么都没写。
用法举例：这家伙还是很懒什么都没写。
*/

package zero.shaders.test{
	import flash.display.*;
	import flash.geom.*;
	import flash.utils.*;
	import zero.shaders.*;
	
	/**
	 * 
	 * 棋盘
	 * 
	 */	
	public class Chessboard extends BaseShader{
		
		public static const nameV:Vector.<String>=new <String>["alpha","dimension","color1","color2"];
		//ChessboardCode//为了编译进来
		public static const byteV:Vector.<int>=new <int>[0xa5,0x01,0x00,0x00,0x00,0xa4,0x0a,0x00,0x43,0x68,0x65,0x73,0x73,0x62,0x6f,0x61,0x72,0x64,0xa0,0x0c,0x6e,0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x00,0x7a,0x65,0x72,0x6f,0x2e,0x73,0x68,0x61,0x64,0x65,0x72,0x73,0x2e,0x74,0x65,0x73,0x74,0x00,0xa0,0x0c,0x76,0x65,0x6e,0x64,0x6f,0x72,0x00,0x5a,0xa7,0xa7,0xa7,0xc1,0xa1,0xe8,0x00,0xa0,0x08,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x00,0x02,0x00,0xa0,0x0c,0x64,0x65,0x73,0x63,0x72,0x69,0x70,0x74,0x69,0x6f,0x6e,0x00,0xc6,0xe5,0xc5,0xcc,0x00,0xa1,0x01,0x02,0x00,0x00,0x0c,0x5f,0x4f,0x75,0x74,0x43,0x6f,0x6f,0x72,0x64,0x00,0xa1,0x01,0x01,0x00,0x00,0x02,0x61,0x6c,0x70,0x68,0x61,0x00,0xa1,0x01,0x01,0x00,0x00,0x01,0x64,0x69,0x6d,0x65,0x6e,0x73,0x69,0x6f,0x6e,0x00,0xa1,0x01,0x04,0x01,0x00,0x0f,0x63,0x6f,0x6c,0x6f,0x72,0x31,0x00,0xa1,0x01,0x04,0x02,0x00,0x0f,0x63,0x6f,0x6c,0x6f,0x72,0x32,0x00,0xa3,0x00,0x04,0x73,0x72,0x63,0x00,0xa1,0x02,0x04,0x03,0x00,0x0f,0x64,0x73,0x74,0x00,0x32,0x04,0x00,0x80,0x00,0x00,0x00,0x00,0x2a,0x04,0x00,0x80,0x00,0x00,0x80,0x00,0x1d,0x01,0x80,0x80,0x00,0x80,0x00,0x00,0x34,0x00,0x00,0x00,0x01,0x80,0x00,0x00,0x1d,0x04,0x00,0xc1,0x00,0x00,0x10,0x00,0x30,0x05,0x00,0xf1,0x04,0x00,0x10,0x00,0x1d,0x03,0x00,0xf3,0x05,0x00,0x1b,0x00,0x04,0x04,0x00,0x20,0x00,0x00,0xc0,0x00,0x03,0x04,0x00,0x20,0x04,0x00,0x00,0x00,0x1a,0x04,0x00,0x10,0x04,0x00,0x80,0x00,0x04,0x04,0x00,0x20,0x00,0x00,0xc0,0x00,0x03,0x04,0x00,0x20,0x04,0x00,0x40,0x00,0x1a,0x05,0x00,0x80,0x04,0x00,0x80,0x00,0x1d,0x04,0x00,0x20,0x04,0x00,0xc0,0x00,0x01,0x04,0x00,0x20,0x05,0x00,0x00,0x00,0x32,0x04,0x00,0x10,0x40,0x00,0x00,0x00,0x1d,0x05,0x00,0x80,0x04,0x00,0x80,0x00,0x08,0x05,0x00,0x80,0x04,0x00,0xc0,0x00,0x32,0x04,0x00,0x20,0x00,0x00,0x00,0x00,0x28,0x05,0x00,0x80,0x04,0x00,0x80,0x00,0x1d,0x01,0x80,0x40,0x00,0x80,0x00,0x00,0x34,0x00,0x00,0x00,0x01,0x80,0x40,0x00,0x1d,0x05,0x00,0xf3,0x03,0x00,0x1b,0x00,0x03,0x05,0x00,0xf3,0x01,0x00,0x1b,0x00,0x1d,0x03,0x00,0xf3,0x05,0x00,0x1b,0x00,0x35,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1d,0x05,0x00,0xf3,0x03,0x00,0x1b,0x00,0x03,0x05,0x00,0xf3,0x02,0x00,0x1b,0x00,0x1d,0x03,0x00,0xf3,0x05,0x00,0x1b,0x00,0x36,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x03,0x00,0x10,0x00,0x00,0x80,0x00,0x35,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x32,0x03,0x00,0x80,0x00,0x00,0x00,0x00,0x32,0x03,0x00,0x40,0x00,0x00,0x00,0x00,0x32,0x03,0x00,0x20,0x00,0x00,0x00,0x00,0x32,0x03,0x00,0x10,0x00,0x00,0x00,0x00,0x36,0x00,0x00,0x00,0x00,0x00,0x00,0x00];
		
		/**
		 * 
		 * 透明度 （0~1） 默认 1
		 * 
		 */
		public var alpha:Number;
		
		/**
		 * 
		 * 格子大小 （1~100） 默认 10
		 * 
		 */
		public var dimension:Number;
		
		/**
		 * 
		 * 颜色1 默认 null
		 * 
		 */
		public var color1:Pixel4;
		
		/**
		 * 
		 * 颜色2 默认 null
		 * 
		 */
		public var color2:Pixel4;
		

		/**
		 * 
		 * 透明度 （0~1） 默认 1<br/>
		 * 格子大小 （1~100） 默认 10<br/>
		 * 颜色1 默认 null<br/>
		 * 颜色2 默认 null<br/>
		 * 
		 */
		public function Chessboard(_alpha:Number=1,_dimension:Number=10,_color1:Pixel4=null,_color2:Pixel4=null){
			alpha=_alpha;
			(data.alpha as ShaderParameter).value=[];
			dimension=_dimension;
			(data.dimension as ShaderParameter).value=[];
			color1=_color1;
			(data.color1 as ShaderParameter).value=[];
			color2=_color2;
			(data.color2 as ShaderParameter).value=[];
		}
		
		override public function updateParams():void{
			(data.alpha as ShaderParameter).value[0]=alpha;
			(data.dimension as ShaderParameter).value[0]=dimension;
			(data.color1 as ShaderParameter).value[0]=color1.r;
			(data.color1 as ShaderParameter).value[1]=color1.g;
			(data.color1 as ShaderParameter).value[2]=color1.b;
			(data.color1 as ShaderParameter).value[3]=color1.a;
			(data.color2 as ShaderParameter).value[0]=color2.r;
			(data.color2 as ShaderParameter).value[1]=color2.g;
			(data.color2 as ShaderParameter).value[2]=color2.b;
			(data.color2 as ShaderParameter).value[3]=color2.a;
		}
		

	}
}